/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voucher1.pkg0;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class FORM extends javax.swing.JFrame {
int switch1;
int switch2;
    /**
     * Creates new form FORM
     */
    public FORM() {
        initComponents();   
    } 
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        formLastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        formFirstName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        formMiddleName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        trackStrand = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        formschoolfees = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        formSchoolTypePrivate = new javax.swing.JRadioButton();
        formSchoolTypePublic = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        formVoucherStatusNonEsc = new javax.swing.JRadioButton();
        formVoucherStatusEsc = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        formUsername = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        formStudentNumber = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        formYearGraduated = new javax.swing.JComboBox<>();
        formPreviousSchool = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        formGradeLevel = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FILL UP FORM");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("LAST NAME:");

        formLastName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formLastNameActionPerformed(evt);
            }
        });
        formLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formLastNameKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("FIRST NAME:");

        formFirstName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formFirstNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("MIDDLE NAME:");

        formMiddleName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formMiddleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formMiddleNameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("TRACK/STRAND:");

        trackStrand.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        trackStrand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ABM", "HUMMS", "ICT", "STEM" }));
        trackStrand.setAutoscrolls(true);
        trackStrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackStrandActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("SCHOOL FEES (â‚±): ");

        formschoolfees.setEditable(false);
        formschoolfees.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formschoolfees.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        formschoolfees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formschoolfeesActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("SCHOOL TYPE: ");

        buttonGroup1.add(formSchoolTypePrivate);
        formSchoolTypePrivate.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formSchoolTypePrivate.setText("PRIVATE");
        formSchoolTypePrivate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formSchoolTypePrivateActionPerformed(evt);
            }
        });

        buttonGroup1.add(formSchoolTypePublic);
        formSchoolTypePublic.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formSchoolTypePublic.setText("PUBLIC");
        formSchoolTypePublic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formSchoolTypePublicMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formSchoolTypePublicMouseReleased(evt);
            }
        });
        formSchoolTypePublic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formSchoolTypePublicActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("VOUCHER STATUS: ");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("SAVE CHANGES");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(formVoucherStatusNonEsc);
        formVoucherStatusNonEsc.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formVoucherStatusNonEsc.setText("NON-ESC GUARANTEE");
        formVoucherStatusNonEsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formVoucherStatusNonEscActionPerformed(evt);
            }
        });

        buttonGroup2.add(formVoucherStatusEsc);
        formVoucherStatusEsc.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formVoucherStatusEsc.setText("ESC GUARANTEE");
        formVoucherStatusEsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formVoucherStatusEscActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("SELECTED ACCOUNT:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("USERNAME:");

        formUsername.setEditable(false);
        formUsername.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("STUDENT NUMBER:");

        formStudentNumber.setEditable(false);
        formStudentNumber.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formStudentNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formStudentNumberActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("LAST SCHOOL ATTENDED:");

        formYearGraduated.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formYearGraduated.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025" }));
        formYearGraduated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formYearGraduatedActionPerformed(evt);
            }
        });

        formPreviousSchool.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formPreviousSchool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formPreviousSchoolActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setText("YEAR GRADUATED:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setText("GRADE LEVEL:");

        formGradeLevel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        formGradeLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GRADE 11", "GRADE 12" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(trackStrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(formPreviousSchool, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(formYearGraduated, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(formLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(formStudentNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(formUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formschoolfees, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formSchoolTypePrivate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formSchoolTypePublic)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formGradeLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formVoucherStatusNonEsc)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(formVoucherStatusEsc)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(581, 581, 581))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(formStudentNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(formUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trackStrand, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formPreviousSchool, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formYearGraduated, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formschoolfees, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formGradeLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formSchoolTypePrivate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formSchoolTypePublic, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formVoucherStatusNonEsc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(formVoucherStatusEsc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formLastNameActionPerformed

    private void formFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formFirstNameActionPerformed

    private void formMiddleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formMiddleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formMiddleNameActionPerformed

    private void formSchoolTypePublicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formSchoolTypePublicActionPerformed
    
        
    }//GEN-LAST:event_formSchoolTypePublicActionPerformed

    private void formVoucherStatusNonEscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formVoucherStatusNonEscActionPerformed
    switch1 = 1;
    }//GEN-LAST:event_formVoucherStatusNonEscActionPerformed

    private void formVoucherStatusEscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formVoucherStatusEscActionPerformed
    switch1 = 2;
    }//GEN-LAST:event_formVoucherStatusEscActionPerformed

    private void formSchoolTypePrivateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formSchoolTypePrivateActionPerformed
        formSchoolTypePrivate.addActionListener(e -> {
            if (formSchoolTypePrivate.isSelected()){
                formVoucherStatusNonEsc.setText("NON-ESC GUARANTEE");
                formVoucherStatusEsc.setText("ESC GUARANTEE");
            }
});
    }//GEN-LAST:event_formSchoolTypePrivateActionPerformed

    private void trackStrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackStrandActionPerformed
    
    }//GEN-LAST:event_trackStrandActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        RECEIPT obj1 = new RECEIPT();
        String strandType = trackStrand.getSelectedItem().toString();
        String yearGraduated = formYearGraduated.getSelectedItem().toString();
        String gradeLevel = formGradeLevel.getSelectedItem().toString();
        String formAccountUsername = formUsername.getText();
    if (formLastName.getText().equals(""))
    {
        JOptionPane.showMessageDialog(null, "Please enter your last name","Missing Information", JOptionPane.INFORMATION_MESSAGE);
    }
    else if (formFirstName.getText().equals(""))
    {
        JOptionPane.showMessageDialog(null, "Please enter your first name","Missing Information", JOptionPane.INFORMATION_MESSAGE);   
    }
    else if (formMiddleName.getText().equals(""))
    {
        JOptionPane.showMessageDialog(null, "Please enter your middle name","Missing Information", JOptionPane.INFORMATION_MESSAGE);
    }
    else if (formPreviousSchool.getText().equals(""))
    {
        JOptionPane.showMessageDialog(null, "Please enter your last school attended","Missing Information", JOptionPane.INFORMATION_MESSAGE);
    }
    else
    {
    int response = JOptionPane.showConfirmDialog(null, "Save changes?", "CONFIRMATION", JOptionPane.YES_NO_OPTION);
    if (response == JOptionPane.YES_OPTION) 
    {
        if (formSchoolTypePrivate.isSelected() == true) { // PRIVATE
                switch(switch1) { 
                        case 1: // NON-ESC
                                    obj1.receiptFirstName.setText(formFirstName.getText());
                                    obj1.receiptLastName.setText(formLastName.getText());
                                    obj1.receiptMiddleName.setText(formMiddleName.getText());
                                    obj1.receiptVoucherStatus.setText(formVoucherStatusNonEsc.getText());
                                    obj1.receiptSchoolType.setText(formSchoolTypePrivate.getText());
                                    obj1.receiptTrackStand.setText(strandType);
                                    obj1.receiptPreviousSchool.setText(formPreviousSchool.getText());
                                    obj1.receiptYearGraduated.setText(yearGraduated);
                                    obj1.receiptGradeLevel.setText(gradeLevel);
                                    obj1.receiptUsername.setText(formUsername.getText());
                                    obj1.receiptschoolfeesfinal.setText(formschoolfees.getText());
                                    try {
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/accounts","root","");
                                    Statement st = con.createStatement();
                                    String username = formUsername.getText();
                                    String lastname = formLastName.getText();
                                    String firstname = formFirstName.getText();
                                    String middlename = formMiddleName.getText();
                                    String schooltype = formSchoolTypePrivate.getText();
                                    String voucherstatus = formVoucherStatusNonEsc.getText();
                                    String previousschool = formPreviousSchool.getText();
                                    String sql = "UPDATE user SET lastname = '"+lastname+"', firstname = '"+firstname+"', middlename = '"+middlename+"',trackstand ='"+strandType+"',schooltype ='"+schooltype+"',voucherstatus ='"+voucherstatus+"',previousschool ='"+previousschool+"',yeargraduated ='"+yearGraduated+"',gradelevel ='"+gradeLevel+"' WHERE username = '"+username+"';";
                                    int i = st.executeUpdate(sql);
                                    if (i > 0) {
                                        JOptionPane.showMessageDialog(null, "Saved changes","SUCCESS",JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Unable to save changes","FAILED",JOptionPane.INFORMATION_MESSAGE);
                                    }
                                    con.close();
                                    } catch(Exception e){
                                        System.out.println(e);
                                    }
                                    try {
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/accounts","root","");
                                    Statement st = con.createStatement();
                                    String studentId = "SELECT * FROM user where username='"+formAccountUsername+"'";
                                    ResultSet rs = st.executeQuery(studentId);
                                    while(rs.next()){
                                    String id = String.valueOf(rs.getInt(1));
                                    obj1.receiptStudentNumber.setText(id);
                                    } con.close(); }
                                    catch(Exception e){
                                        System.out.println(e);
                                    }
                                    dispose();
                                    obj1.setVisible(true);
                                    break;
                        case 2: // ESC
                                    obj1.receiptFirstName.setText(formFirstName.getText());
                                    obj1.receiptLastName.setText(formLastName.getText());
                                    obj1.receiptMiddleName.setText(formMiddleName.getText());
                                    obj1.receiptVoucherStatus.setText(formVoucherStatusEsc.getText());
                                    obj1.receiptSchoolType.setText(formSchoolTypePrivate.getText());
                                    obj1.receiptTrackStand.setText(strandType);
                                    obj1.receiptPreviousSchool.setText(formPreviousSchool.getText());
                                    obj1.receiptYearGraduated.setText(yearGraduated);
                                    obj1.receiptGradeLevel.setText(gradeLevel);
                                    obj1.receiptUsername.setText(formUsername.getText());
                                    obj1.receiptschoolfeesfinal.setText(formschoolfees.getText());
                                    try {
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/accounts","root","");
                                    Statement st = con.createStatement();
                                    String username = formUsername.getText();
                                    String lastname = formLastName.getText();
                                    String firstname = formFirstName.getText();
                                    String middlename = formMiddleName.getText();
                                    String schooltype = formSchoolTypePrivate.getText();
                                    String voucherstatus = formVoucherStatusEsc.getText();
                                    String previousschool = formPreviousSchool.getText();
                                    String sql = "UPDATE user SET lastname = '"+lastname+"', firstname = '"+firstname+"', middlename = '"+middlename+"',trackstand ='"+strandType+"',schooltype ='"+schooltype+"',voucherstatus ='"+voucherstatus+"',previousschool ='"+previousschool+"',yeargraduated ='"+yearGraduated+"',gradelevel ='"+gradeLevel+"' WHERE username = '"+username+"';";
                                    int i = st.executeUpdate(sql);
                                    if (i > 0) {
                                        JOptionPane.showMessageDialog(null, "Saved changes","SUCCESS",JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Unable to save changes","FAILED",JOptionPane.INFORMATION_MESSAGE);
                                    }
                                    con.close();
                                    } catch(Exception e){
                                        System.out.println(e);
                                    }
                                    try {
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/accounts","root","");
                                    Statement st = con.createStatement();
                                    String studentId = "SELECT * FROM user where username='"+formAccountUsername+"'";
                                    ResultSet rs = st.executeQuery(studentId);
                                    while(rs.next()){
                                    String id = String.valueOf(rs.getInt(1));
                                    obj1.receiptStudentNumber.setText(id);
                                    } con.close(); }
                                    catch(Exception e){
                                        System.out.println(e);
                                    }
                                    dispose();
                                    obj1.setVisible(true);
                                    break;
                        default:
                                JOptionPane.showMessageDialog(this, "Please select a voucher type", "MISSING INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                            
                    }
                }
                else if (formSchoolTypePublic.isSelected() == true ) // PUBLIC
                {
                    switch (switch1) { // NON-ESC
                        case 1:
                                    obj1.receiptFirstName.setText(formFirstName.getText());
                                    obj1.receiptLastName.setText(formLastName.getText());
                                    obj1.receiptMiddleName.setText(formMiddleName.getText());
                                    obj1.receiptVoucherStatus.setText(formVoucherStatusNonEsc.getText());
                                    obj1.receiptSchoolType.setText(formSchoolTypePublic.getText());
                                    obj1.receiptTrackStand.setText(strandType);
                                    obj1.receiptPreviousSchool.setText(formPreviousSchool.getText());
                                    obj1.receiptYearGraduated.setText(yearGraduated);
                                    obj1.receiptGradeLevel.setText(gradeLevel);
                                    obj1.receiptUsername.setText(formUsername.getText());
                                    obj1.receiptschoolfeesfinal.setText(formschoolfees.getText());
                                    try {
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/accounts","root","");
                                    Statement st = con.createStatement();
                                    String username = formUsername.getText();
                                    String lastname = formLastName.getText();
                                    String firstname = formFirstName.getText();
                                    String middlename = formMiddleName.getText();
                                    String schooltype = formSchoolTypePublic.getText();
                                    String voucherstatus = formVoucherStatusNonEsc.getText();
                                    String previousschool = formPreviousSchool.getText();
                                    String sql = "UPDATE user SET lastname = '"+lastname+"', firstname = '"+firstname+"', middlename = '"+middlename+"',trackstand ='"+strandType+"',schooltype ='"+schooltype+"',voucherstatus ='"+voucherstatus+"',previousschool ='"+previousschool+"',yeargraduated ='"+yearGraduated+"',gradelevel ='"+gradeLevel+"' WHERE username = '"+username+"';";
                                    int i = st.executeUpdate(sql);
                                    if (i > 0) {
                                        JOptionPane.showMessageDialog(null, "Saved changes","SUCCESS",JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Unable to save changes","FAILED",JOptionPane.INFORMATION_MESSAGE);
                                    }
                                    con.close();
                                    } catch(Exception e){
                                        System.out.println(e);
                                    }
                                    try {
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/accounts","root","");
                                    Statement st = con.createStatement();
                                    String studentId = "SELECT * FROM user where username='"+formAccountUsername+"'";
                                    ResultSet rs = st.executeQuery(studentId);
                                    while(rs.next()){
                                    String id = String.valueOf(rs.getInt(1));
                                    obj1.receiptStudentNumber.setText(id);
                                    } con.close(); }
                                    catch(Exception e){
                                        System.out.println(e);
                                    }
                                    dispose();
                                    obj1.setVisible(true);
                                    break;
                        case 2 : //ESC
                                    obj1.receiptFirstName.setText(formFirstName.getText());
                                    obj1.receiptLastName.setText(formLastName.getText());
                                    obj1.receiptMiddleName.setText(formMiddleName.getText());
                                    obj1.receiptVoucherStatus.setText(formVoucherStatusEsc.getText());
                                    obj1.receiptSchoolType.setText(formSchoolTypePublic.getText());
                                    obj1.receiptTrackStand.setText(strandType);
                                    obj1.receiptPreviousSchool.setText(formPreviousSchool.getText());
                                    obj1.receiptYearGraduated.setText(yearGraduated);
                                    obj1.receiptGradeLevel.setText(gradeLevel);
                                    obj1.receiptUsername.setText(formUsername.getText());
                                    obj1.receiptschoolfeesfinal.setText(formschoolfees.getText());
                                    try {
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/accounts","root","");
                                    Statement st = con.createStatement();
                                    String username = formUsername.getText();
                                    String lastname = formLastName.getText();
                                    String firstname = formFirstName.getText();
                                    String middlename = formMiddleName.getText();
                                    String schooltype = formSchoolTypePublic.getText();
                                    String voucherstatus = formVoucherStatusEsc.getText();
                                    String previousschool = formPreviousSchool.getText();
                                    String sql = "UPDATE user SET lastname = '"+lastname+"', firstname = '"+firstname+"', middlename = '"+middlename+"',trackstand ='"+strandType+"',schooltype ='"+schooltype+"',voucherstatus ='"+voucherstatus+"',previousschool ='"+previousschool+"',yeargraduated ='"+yearGraduated+"',gradelevel ='"+gradeLevel+"' WHERE username = '"+username+"';";
                                    int i = st.executeUpdate(sql);
                                    if (i > 0) {
                                        JOptionPane.showMessageDialog(null, "Saved changes","SUCCESS",JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Unable to save changes","FAILED",JOptionPane.INFORMATION_MESSAGE);
                                    }
                                    con.close();
                                    } catch(Exception e){
                                        System.out.println(e);
                                    }
                                    try {
                                    Class.forName("com.mysql.cj.jdbc.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/accounts","root","");
                                    Statement st = con.createStatement();
                                    String studentId = "SELECT * FROM user where username='"+formAccountUsername+"'";
                                    ResultSet rs = st.executeQuery(studentId);
                                    while(rs.next()){
                                    String id = String.valueOf(rs.getInt(1));
                                    obj1.receiptStudentNumber.setText(id);
                                    } con.close(); }
                                    catch(Exception e){
                                        System.out.println(e);
                                    }
                                    dispose();
                                    obj1.setVisible(true);
                                    break;
                        default:
                                JOptionPane.showMessageDialog(this, "Please select a voucher type", "MISSING INFORMATION", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Please select a school type","Missing Information", JOptionPane.INFORMATION_MESSAGE);
                }

        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formschoolfeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formschoolfeesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formschoolfeesActionPerformed

    private void formStudentNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formStudentNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formStudentNumberActionPerformed

    private void formPreviousSchoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formPreviousSchoolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formPreviousSchoolActionPerformed

    private void formYearGraduatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formYearGraduatedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formYearGraduatedActionPerformed

    private void formLastNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formLastNameKeyPressed
    
    }//GEN-LAST:event_formLastNameKeyPressed

    private void formSchoolTypePublicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formSchoolTypePublicMouseClicked
formSchoolTypePublic.addActionListener(e -> {
            if (formSchoolTypePublic.isSelected()){
                formVoucherStatusNonEsc.setText("NOT VOUCHER RECIPIENT");
                formVoucherStatusEsc.setText("VOUCHER RECIPIENT");
            }
});
    }//GEN-LAST:event_formSchoolTypePublicMouseClicked

    private void formSchoolTypePublicMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formSchoolTypePublicMouseReleased

    }//GEN-LAST:event_formSchoolTypePublicMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FORM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    public javax.swing.JTextField formFirstName;
    private javax.swing.JComboBox<String> formGradeLevel;
    public javax.swing.JTextField formLastName;
    public javax.swing.JTextField formMiddleName;
    public javax.swing.JTextField formPreviousSchool;
    public javax.swing.JRadioButton formSchoolTypePrivate;
    public javax.swing.JRadioButton formSchoolTypePublic;
    public javax.swing.JTextField formStudentNumber;
    public javax.swing.JTextField formUsername;
    public javax.swing.JRadioButton formVoucherStatusEsc;
    public javax.swing.JRadioButton formVoucherStatusNonEsc;
    public javax.swing.JComboBox<String> formYearGraduated;
    public javax.swing.JTextField formschoolfees;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JComboBox<String> trackStrand;
    // End of variables declaration//GEN-END:variables
}
